//
//  debug_translation.h
//  mygb
//
//  Created by Daniel on 28.06.14.
//  Copyright (c) 2014 Daniel. All rights reserved.
//

#ifndef mygb_debug_translation_h
#define mygb_debug_translation_h

namespace emu
{
    const char * op_translation_00[256] {
        "00         NOP	",
        "01 n n		LD BC,nn",
        "02         LD (BC),A",
        "03         INC BC			",
        "04         INC B			",
        "05         DEC B			",
        "06 n		LD B,n			",
        "07         RLCA			",
        "08         EX AF,AFâ€™		",
        "09         ADD HL,BC		",
        "0A         LD A,(BC)		",
        "0B         DEC BC			",
        "0C         INC C			",
        "0D         DEC C			",
        "0E n		LD C,n			",
        "0F         RRCA			",
        //0x01
        "10 e		DJNZ (PC+e)",
        "11 n n		LD DE,nn		",
        "12         LD (DE),A		",
        "13         INC DE			",
        "14         INC D			",
        "15         DEC D			",
        "16 n		LD D,n			",
        "17         RLA				",
        "18 e		JR (PC+e)		",
        "19         ADD HL,DE		",
        "1A         LD A,(DE)		",
        "1B         DEC DE			",
        "1C         INC E			",
        "1D         DEC E			",
        "1E n		LD E,n			",
        "1F         RRA",
        //0x02
        "20 e	JR NZ,(PC+e)",
        "21 n n		LD HL,nn		",
        "22 n n		LD (HL+),A		",
        "23         INC HL			",
        "24         INC H			",
        "25         DEC H			",
        "26 n		LD H,n			",
        "27         DAA",
        "28 e		JR Z,(PC+e)",
        "29         ADD HL,HL		",
        "2A n n		LD HL,(nn)		",
        "2B         DEC HL			",
        "2C         INC L			",
        "2D         DEC L			",
        "2E n		LD L,n			",
        "2F         CPL",
        //0x03
        "30 e		JR NC,(PC+e)",
        "31 n n		LD SP,nn",
        "32 n n		LD (nn),A",
        "33         INC SP",
        "34         INC (HL)",
        "35         DEC (HL)",
        "36 n		LD (HL),n",
        "37         SCF",
        "38 e		JR C,(PC+e)",
        "39         ADD HL,SP",
        "3A n n		LD A,(nn)",
        "3B         DEC SP",
        "3C         INC A",
        "3D         DEC A",
        "3E n		LD A,n",
        "3F         CCF",
        //0x04
        "40         LD B,B		",
        "41         LD B,C		",
        "42         LD B,D		",
        "43         LD B,E		",
        "44         LD B,H		",
        "45         LD B,L		",
        "46         LD B,(HL)",
        "47         LD B,A		",
        "48         LD C,B		",
        "49         LD C,C		",
        "4A         LD C,D		",
        "4B         LD C,E		",
        "4C         LD C,H		",
        "4D         LD C,L		",
        "4E         LD C,(HL)",
        "4F         LD C,A		",
        //0x05
        "50         LD D,B		",
        "51         LD D,C		",
        "52         LD D,D		",
        "53         LD D,E		",
        "54         LD D,H		",
        "55         LD D,L		",
        "56         LD D,(HL)",
        "57         LD D,A		",
        "58         LD E,B		",
        "59         LD E,C		",
        "5A         LD E,D		",
        "5B         LD E,E		",
        "5C         LD E,H		",
        "5D         LD E,L		",
        "5E         LD E,(HL)",
        "5F         LD E,A		",
        //0x06
        "60         LD H,B		",
        "61         LD H,C		",
        "62         LD H,D		",
        "63         LD H,E		",
        "64         LD H,H		",
        "65         LD H,L		",
        "66         LD H,(HL)",
        "67         LD H,A		",
        "68         LD L,B		",
        "69         LD L,C		",
        "6A         LD L,D		",
        "6B         LD L,E		",
        "6C         LD L,H		",
        "6D         LD L,L		",
        "6E         LD L,(HL)",
        "6F         LD L,A		",
        //0x07
        "70         LD (HL),B",
        "71         LD (HL),C",
        "72         LD (HL),D",
        "73         LD (HL),E",
        "74         LD (HL),H",
        "75         LD (HL),L",
        "76         HALT		",
        "77         LD (HL),A",
        "78         LD A,B		",
        "79         LD A,C		",
        "7A         LD A,D		",
        "7B         LD A,E		",
        "7C         LD A,H		",
        "7D         LD A,L		",
        "7E         LD A,(HL)",
        "7F         LD A,A		",
        //0x08
        "80         ADD A,B		",
        "81         ADD A,C		",
        "82         ADD A,D		",
        "83         ADD A,E		",
        "84         ADD A,H		",
        "85         ADD A,L		",
        "86         ADD A,(HL)",
        "87         ADD A,A		",
        "88         ADC A,B		",
        "89         ADC A,C		",
        "8A         ADC A,D		",
        "8B         ADC A,E		",
        "8C         ADC A,H		",
        "8D         ADC A,L		",
        "8E         ADC A,(HL)",
        "8F         ADC A,A		",
        //0x09
        "90         SUB B		",
        "91         SUB C		",
        "92         SUB D		",
        "93         SUB E		",
        "94         SUB H		",
        "95         SUB L		",
        "96         SUB (HL)	",
        "97         SUB A		",
        "98         SBC A,B		",
        "99         SBC A,C		",
        "9A         SBC A,D		",
        "9B         SBC A,E		",
        "9C         SBC A,H		",
        "9D         SBC A,L		",
        "9E         SBC A,(HL)",
        "9F         SBC A,A		",
        //0x0A
        "A0         AND B		",
        "A1         AND C		",
        "A2         AND D		",
        "A3         AND E		",
        "A4         AND H		",
        "A5         AND L		",
        "A6         AND (HL)	",
        "A7         AND A		",
        "A8         XOR B		",
        "A9         XOR C		",
        "AA         XOR D		",
        "AB         XOR E		",
        "AC         XOR H		",
        "AD         XOR L		",
        "AE         XOR (HL)	",
        "AF         XOR A		",
        //0x0B
        "B0         OR B		",
        "B1         OR C		",
        "B2         OR D		",
        "B3         OR E		",
        "B4         OR H		",
        "B5         OR L		",
        "B6         OR (HL)		",
        "B7         OR A		",
        "B8         CP B		",
        "B9         CP C		",
        "BA         CP D		",
        "BB         CP E		",
        "BC         CP H		",
        "BD         CP L		",
        "BE         CP (HL)		",
        "BF         CP A		",
        //0x0C
        "C0         RET NZ",
        "C1         POP BC",
        "C2 n n		JP NZ,(nn)",
        "C3 n n		JP (nn)",
        "C4 n n		CALL NZ,(nn)",
        "C5         PUSH BC",
        "C6 n		ADD A,n",
        "C7         RST 0H",
        "C8         RET Z",
        "C9         RET",
        "CA n n		JP Z,(nn)",
        "CB Table",
        "CC n n		CALL Z,(nn)",
        "CD n n		CALL (nn)",
        "CE n		ADC A,n",
        "CF         RST 8H",
        //0x0D
        "D0         RET NC",
        "D1         POP DE",
        "D2 n n		JP NC,(nn)",
        "D3 n		OUT (n),A",
        "D4 n n		CALL NC,(nn)",
        "D5         PUSH DE",
        "D6 n		SUB n",
        "D7         RST 10H",
        "D8         RET C",
        "D9         RETI",
        "DA         JP C,a16",
        "(???)",
        "DC         CALL C,a16",
        "(???)",
        "DE         SBC A,d8",
        "DF         RST 18H",
        //0x0E
        "E0 n       LDH (0xFF+n), A",
        "E1         POP HL",
        "E2 n n		JP PO,(nn)",
        "E3         EX (SP),HL",
        "E4 n n		CALL PO,(nn)",
        "E5         PUSH HL",
        "E6 n		AND n",
        "E7         RST 20H",
        "E8         RET PE",
        "E9         JP (HL)",
        "EA n n		LD (a16),A",
        "EB         EX DE,HL",
        "EC n n		CALL PE,(nn)",
        "(???)",
        "EE n		XOR n",
        "EF         RST 28H",
        //0x0F
        "F0 n        LDH A,(a8)",
        "F1         POP AF",
        "F2 n n		JP P,(nn)",
        "F3         DI",
        "F4 n n		CALL P,(nn)",
        "F5         PUSH AF",
        "F6 n		OR n",
        "F7         RST 30H",
        "F8         LD HL,SP+r8",
        "F9         LD SP,HL",
        "FA n n		LD A,(a16)",
        "FB         EI",
        "(???)",
        "(???)",
        "FE n       CP n",
        "FF         RST38",
    };
    
    
    const char * op_translation_CB[256] {
        "CB00		RLC B		",
        "CB01		RLC C		",
        "CB02		RLC D		",
        "CB03		RLC E		",
        "CB04		RLC H		",
        "CB05		RLC L		",
        "CB06		RLC (HL)	",
        "CB07		RLC A		",
        "CB08		RRC B		",
        "CB09		RRC C		",
        "CB0A		RRC D		",
        "CB0B		RRC E		",
        "CB0C		RRC H		",
        "CB0D		RRC L		",
        "CB0E		RRC (HL)	",
        "CB0F		RRC A		",
        "CB10		RL B		",
        "CB11		RL C		",
        "CB12		RL D		",
        "CB13		RL E		",
        "CB14		RL H		",
        "CB15		RL L		",
        "CB16		RL (HL)		",
        "CB17		RL A		",
        "CB18		RR B		",
        "CB19		RR C		",
        "CB1A		RR D		",
        "CB1B		RR E		",
        "CB1C		RR H		",
        "CB1D		RR L		",
        "CB1E		RR (HL)		",
        "CB1F		RR A		",
        "CB20		SLA B		",
        "CB21		SLA C		",
        "CB22		SLA D		",
        "CB23		SLA E		",
        "CB24		SLA H		",
        "CB25		SLA L		",
        //"CB26		SLA (HL)	",
        "(???)",
        "CB27		SLA A		",
        "CB28		SRA B		",
        "CB29		SRA C		",
        "CB2A		SRA D		",
        "CB2B		SRA E		",
        "CB2C		SRA H		",
        "CB2D		SRA L		",
        //"CB2E		SRA (HL)	",
        "(???)",
        "CB2F		SRA A		",
        "CB30		SLL B*		",
        "CB31		SLL C*		",
        "CB32		SLL D*		",
        "CB33		SLL E*		",
        "CB34		SLL H*		",
        "CB35		SLL L*		",
        "CB36       SWAP (HL)",
        "CB37		SWAP A		",
        "CB38		SRL B		",
        "CB39		SRL C		",
        "CB3A		SRL D		",
        "CB3B		SRL E		",
        "CB3C		SRL H		",
        "CB3D		SRL L		",
        //"CB3E		SRL (HL)	",
        "(???)",
        "CB3F		SRL A		",
        "CB40		BIT 0,B		",
        "CB41		BIT 0,C		",
        "CB42		BIT 0,D		",
        "CB43		BIT 0,E		",
        "CB44	 	BIT 0,H		",
        "CB45	 	BIT 0,L		",
        "CB46	 	BIT 0,(HL)	",
        "CB47	 	BIT 0,A		",
        "CB48		BIT 1,B		",
        "CB49	 	BIT 1,C		",
        "CB4A	 	BIT 1,D		",
        "CB4B	 	BIT 1,E		",
        "CB4C	 	BIT 1,H		",
        "CB4D	 	BIT 1,L		",
        "CB4E	 	BIT 1,(HL)	",
        "CB4F	 	BIT 1,A		",
        "CB50		BIT 2,B		",
        "CB51	 	BIT 2,C		",
        "CB52	 	BIT 2,D		",
        "CB53	 	BIT 2,E		",
        "CB54	 	BIT 2,H		",
        "CB55	 	BIT 2,L		",
        "CB56	 	BIT 2,(HL)	",
        "CB57	 	BIT 2,A		",
        "CB58		BIT 3,B		",
        "CB59	 	BIT 3,C		",
        "CB5A	 	BIT 3,D		",
        "CB5B	 	BIT 3,E		",
        "CB5C	 	BIT 3,H		",
        "CB5D	 	BIT 3,L		",
        "CB5E	 	BIT 3,(HL)	",
        "CB5F	 	BIT 3,A		",
        "CB60		BIT 4,B		",
        "CB61	 	BIT 4,C		",
        "CB62	 	BIT 4,D		",
        "CB63	 	BIT 4,E		",
        "CB64	 	BIT 4,H		",
        "CB65	 	BIT 4,L		",
        "CB66	 	BIT 4,(HL)	",
        "CB67	 	BIT 4,A		",
        "CB68		BIT 5,B		",
        "CB69	 	BIT 5,C		",
        "CB6A	 	BIT 5,D		",
        "CB6B	 	BIT 5,E		",
        "CB6C	 	BIT 5,H		",
        "CB6D	 	BIT 5,L		",
        "CB6E	 	BIT 5,(HL)	",
        "CB6F	 	BIT 5,A		",
        "CB70		BIT 6,B		",
        "CB71	 	BIT 6,C		",
        "CB72	 	BIT 6,D		",
        "CB73	 	BIT 6,E		",
        "CB74	 	BIT 6,H		",
        "CB75	 	BIT 6,L		",
        "CB76	 	BIT 6,(HL)	",
        "CB77	 	BIT 6,A		",
        "CB78		BIT 7,B		",
        "CB79	 	BIT 7,C		",
        "CB7A	 	BIT 7,D		",
        "CB7B	 	BIT 7,E		",
        "CB7C	 	BIT 7,H		",
        "CB7D	 	BIT 7,L		",
        "CB7E	 	BIT 7,(HL)	",
        "CB7F	 	BIT 7,A		",
        
        //CB80
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        
        //CB90
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        
        //CBA0
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        
        //CBB0
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        
        //CBC0
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        
        //CBD0
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        
        //CBE0
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        
        //CBF0
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
        "(???)",
    };
}
#endif
